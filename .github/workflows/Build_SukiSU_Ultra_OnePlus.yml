name: BuildOnePlusSukiSUUltraAll
on:
  workflow_dispatch:
    inputs:
      FILE:
        type: choice
        description: "ÈÖçÁΩÆÊñá‰ª∂"
        required: true
        default: oneplus_13
        options:
          - oneplus_nord_ce4_lite_5g_v
          - oneplus_nord_ce4_v
          - oneplus_nord_4_v
          - oneplus_ace_3v_v
          - oneplus_10_pro_v
          - oneplus_10t_v
          - oneplus_11r_v
          - oneplus_ace2_v
          - oneplus_ace_pro_v
          - oneplus_11_v
          - oneplus_12r_v
          - oneplus_ace2_pro_v
          - oneplus_ace3_v
          - oneplus_open_v
          - oneplus12_v
          - oneplus_13r
          - oneplus_ace3_pro_v
          - oneplus_ace5
          - oneplus_pad_pro_v
          - oneplus_pad2_v
          - oneplus_nord_5
          - oneplus_ace5_pro
          - oneplus_13
          - oneplus_13t
          - oneplus_13s
          - oneplus_pad_2_pro
          - oneplus_pad_3
      HOOK:
        type: choice
        description: "Èí©Â≠êÈÄâÊã©"
        required: true
        default: tracepoint
        options:
          - kprobe
          - manual
          - tracepoint
      SUSFS_CI:
        type: choice
        description: "‰∏ãËΩΩSUSFSÊ®°ÂùóË∞ÉÁî®ÊñπÂºè"
        required: true
        default: NoN
        options:
          - CI
          - Release
          - NoN
      KSU_META:
        type: string
        description: "ÂàÜÊîØÂêç(‰∏çÂèØÁïôÁ©∫)/Ëá™ÂÆö‰πâÁâàÊú¨Ê†áËØÜ(ÁïôÁ©∫‰∏ç‰øÆÊîπ)"
        required: false
        default: "susfs-main/Numbersf"
      BUILD_TIME:
        type: string
        description: "Ëá™ÂÆö‰πâÊûÑÂª∫Êó∂Èó¥ (ËæìÂÖ•F‰ΩøÁî®ÂΩìÂâçÊó∂Èó¥)"
        required: false
        default: "Sun Jun 15 14:56:02 UTC 2025"
      SUFFIX:
        type: string
        description: "Ëá™ÂÆö‰πâÂÜÖÊ†∏ÂêéÁºÄ (‰∏çËæìÂÖ•‰ΩøÁî®ÈöèÊú∫Â≠óÁ¨¶‰∏≤)"
        required: false
        default: ""
      FAST_BUILD:
        type: boolean
        description: "ÊòØÂê¶ÂêØÁî®ÊûÅÈÄüÊûÑÂª∫Ôºü"
        required: true
        default: true
      KPM:
        type: boolean
        description: "ÊòØÂê¶ÂêØÁî®ÂÜÖÊ†∏Ê®°Âùó(KPM)Ôºü"
        required: true
        default: true
      SCHED:
        type: boolean
        description: "ÊòØÂê¶Ê∑ªÂä†È£éÈ©∞È©±Âä®Ôºü"
        required: true
        default: false
      ZRAM:
        type: boolean
        description: "ÊòØÂê¶Ê∑ªÂä†Êõ¥Â§öZRAMÁÆóÊ≥ïÔºü"
        required: true
        default: false

jobs:
  build:
    name: ${{ github.event.inputs.FAST_BUILD == 'true' && ' [FAST]' || '' }}${{ github.event.inputs.SCHED == 'true' && ' [SCHED]' || '' }}${{ github.event.inputs.ZRAM == 'true' && ' [ZRAM]' || '' }}${{ github.event.inputs.KPM == 'true' && ' [KPM]' || '' }}For ${{ github.event.inputs.FILE }} ${{ github.event.inputs.SUFFIX }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Auto Extract
        id: extract_info
        run: |
          set -e
          cd "$GITHUB_WORKSPACE"
          declare -A KVERSION_MAP=(
            ["oneplus_nord_ce4_lite_5g"]="android14 6.1"
            ["oneplus_nord_ce4"]="android14 5.15"
            ["oneplus_nord_4"]="android14 6.1"
            ["oneplus_ace_3v"]="android14 6.1"
            ["oneplus_10_pro"]="android12 5.10"
            ["oneplus_10t"]="android12 5.10"
            ["oneplus_11r"]="android12 5.10"
            ["oneplus_ace2"]="android12 5.10"
            ["oneplus_ace_pro"]="android12 5.10"
            ["oneplus_11"]="android13 5.15"
            ["oneplus_12r"]="android13 5.15"
            ["oneplus_ace2_pro"]="android13 5.15"
            ["oneplus_ace3"]="android13 5.15"
            ["oneplus_open"]="android13 5.15"
            ["oneplus12"]="android14 6.1"
            ["oneplus_13r"]="android14 6.1"
            ["oneplus_ace3_pro"]="android14 6.1"
            ["oneplus_ace5"]="android14 6.1"
            ["oneplus_pad_pro"]="android14 6.1"
            ["oneplus_pad2"]="android14 6.1"
            ["oneplus_nord_5"]="android14 6.1"
            ["oneplus_ace5_pro"]="android15 6.6"
            ["oneplus_13"]="android15 6.6"
            ["oneplus_13t"]="android15 6.6"
            ["oneplus_13s"]="android15 6.6"
            ["oneplus_pad_2_pro"]="android15 6.6"
            ["oneplus_pad_3"]="android15 6.6"
          )
          FILE="${{ github.event.inputs.FILE }}"
          if [[ "$FILE" =~ ^(.+)_([a-zA-Z])$ ]]; then
            FILE_CONF="${BASH_REMATCH[1]}"
          else
            FILE_CONF="$FILE"
          fi
          FILE_BASE=$(echo "$FILE_CONF" | sed -E 's/_([a-zA-Z0-9])/\U\1/g; s/^oneplus/OnePlus/')
          mkdir -p ".repo/manifests_fallback"
          XML_PATH=".repo/manifests_fallback/${FILE}.xml"
          README_PATH=".repo/manifests_fallback/README.md"
          echo "Â§ÑÁêÜ FILE=$FILE, CONF=$FILE_CONF, BASE=$FILE_BASE"
          echo "FILE_CONF=$FILE_CONF" >> $GITHUB_ENV
          echo "FILE_BASE=$FILE_BASE" >> $GITHUB_ENV

          echo "üåê ÊãâÂèñ OnePlus Manifest ÂàÜÊîØÂàóË°®..."
          BRANCHES=$(curl -s https://api.github.com/repos/OnePlusOSS/kernel_manifest/branches | jq -r '.[].name')

          FOUND=""
          for BRANCH in $BRANCHES; do
            XML_URL="https://raw.githubusercontent.com/OnePlusOSS/kernel_manifest/$BRANCH/${FILE}.xml"
            README_URL="https://raw.githubusercontent.com/OnePlusOSS/kernel_manifest/$BRANCH/README.md"
            if curl -sf --head "$XML_URL" > /dev/null; then
              echo "‚úÖ XML: $BRANCH"
              curl -s -o "$XML_PATH" "$XML_URL"
              curl -s -o "$README_PATH" "$README_URL"
              FOUND="$BRANCH"
              break
            fi
          done

          if [[ -z "$FOUND" || ! -s "$XML_PATH" ]]; then
            echo "‚ùå Êó†Ê≥ïÊâæÂà∞ ${FILE}.xml"
            exit 1
          fi
          echo "üì• ‰∏ãËΩΩÂÆåÊàêÔºåÂºÄÂßãÊèêÂèñ revision..."

          # Ëß£Êûê revision Â≠óÁ¨¶‰∏≤
          REVISION=$(grep -oP '<project[^>]+revision="\K[^"]+' "$XML_PATH" | head -n1 || true)
          echo "Ëß£Êûê FILE Ëé∑Âèñ CPU Âíå ANDROID_VERSION..."
          # ÊèêÂèñ CPU
          CPU=$(echo "$REVISION" | sed -E 's#^oneplus/([^_]+).*#\1#')
          # ÊèêÂèñ ANDROID_VERSION
          ANDROID_VERSION=$(echo "$REVISION" | grep -oP '\d{1,2}\.\d{1,2}(\.\d{1,2})?')
          if [[ -n "$CPU" && -n "$ANDROID_VERSION" ]]; then
            echo "‚úÖ CPU=$CPU, ANDROID_VERSION=$ANDROID_VERSION"
            echo "CPU=$CPU" >> $GITHUB_ENV
            echo "ANDROID_VERSION=$ANDROID_VERSION" >> $GITHUB_ENV
            # Ëé∑ÂèñÁü≠‰Ωç Android ÁâàÊú¨Âè∑
            echo "ANDROID_SHORT_VERSION=${ANDROID_VERSION%%.*}" >> $GITHUB_ENV
          else
            echo "‚ùå Êó†Ê≥ï‰ªé revision ‰∏≠ÊèêÂèñ CPU Êàñ ANDROID_VERSION"
            exit 1
          fi

          echo "Ëß£Êûê KVERSION_MAP Ëé∑Âèñ KANDROID_VERSION Âíå KERNEL_VERSION..."
          if [[ -n "${KVERSION_MAP[$FILE_CONF]}" ]]; then
            read -r KANDROID_VERSION KERNEL_VERSION <<< "${KVERSION_MAP[$FILE_CONF]}"
            echo "‚úÖ KVERSION_MAP[$FILE_CONF] = $KANDROID_VERSION $KERNEL_VERSION"
            echo "KANDROID_VERSION=$KANDROID_VERSION" >> $GITHUB_ENV
            echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV
          else
            echo "‚ùå KVERSION_MAP ‰∏≠Ê≤°ÊúâÊâæÂà∞ $FILE_CONF ÂØπÂ∫îÁöÑÁâàÊú¨‰ø°ÊÅØ"
          fi

          echo "Ëß£Êûê README.md Ëé∑Âèñ CPUD Âíå BUILD_METHOD..."
          if [[ -s "$README_PATH" ]]; then
            BUILD_LINE=$(grep -m1 'oplus_build_kernel.sh' "$README_PATH" || true)
            if [[ -n "$BUILD_LINE" ]]; then
              CPUD=$(echo "$BUILD_LINE" | awk '{print $(NF-1)}')
              BUILD_METHOD=$(echo "$BUILD_LINE" | awk '{print $NF}')
              echo "‚úÖ CPUD=$CPUD, BUILD_METHOD=$BUILD_METHOD"
              echo "CPUD=$CPUD" >> $GITHUB_ENV
              echo "BUILD_METHOD=$BUILD_METHOD" >> $GITHUB_ENV
            else
              echo "‚ùå README.md ‰∏≠Êú™ÊâæÂà∞ÊûÑÂª∫ÂëΩ‰ª§"
            fi
          else
            echo "‚ùå README.md ‰∏ãËΩΩÂ§±Ë¥•Êàñ‰∏∫Á©∫"
          fi
          # ‰º†ÈÄíÁªÑÂêà‰ø°ÊÅØ
          echo "value=${FILE_BASE}_Android${ANDROID_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Debug Show Selected Inputs
        run: |
          echo "-----------------------"
          echo "Selected CPU: ${{ env.CPU }}"
          echo "Selected CPUD: ${{ env.CPUD }}"
          echo "Selected KANDROID_VERSION: ${{ env.KANDROID_VERSION }}"
          echo "Selected ANDROID_VERSION: ${{ env.ANDROID_VERSION }}"
          echo "Selected KERNEL_VERSION: ${{ env.KERNEL_VERSION }}"
          echo "Selected BUILD_METHOD: ${{ env.BUILD_METHOD }}"
          echo "Selected FILE: ${{ github.event.inputs.FILE }}"
          echo "Custom KSU_META: ${{ github.event.inputs.KSU_META }}"
          echo "Custom BUILD_TIME: ${{ github.event.inputs.BUILD_TIME }}"
          echo -n "BUILD_TIME Unicode: "
          python3 -c "print(''.join(f'U+{ord(c):04X} ' for c in '''${{ github.event.inputs.BUILD_TIME }}'''))"
          echo "Custom SUFFIX: ${{ github.event.inputs.SUFFIX }}"
          echo -n "SUFFIX Unicode: "
          python3 -c "print(''.join(f'U+{ord(c):04X} ' for c in '''${{ github.event.inputs.SUFFIX }}'''))"
          echo "Selected SUSFS_CI: ${{ github.event.inputs.SUSFS_CI }}"
          echo "Selected HOOK: ${{ github.event.inputs.HOOK }}"
          echo "Selected KPM: ${{ github.event.inputs.KPM }}"
          echo "Selected FAST_BUILD: ${{ github.event.inputs.FAST_BUILD }}"
          echo "Selected SCHED: ${{ github.event.inputs.SCHED }}"
          echo "Selected ZRAM: ${{ github.event.inputs.ZRAM }}"
          echo "-----------------------"

      - name: Check Disk Space
        run: df -h

      - name: Create and Enable 3G Swap
        run: |
          sudo swapoff -a
          sudo fallocate -l 3G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Set Cache Environment
        run: |
          echo "CCACHE_DIR=$HOME/.ccache_${{ github.event.inputs.FILE }}" >> $GITHUB_ENV
          mkdir -p "$HOME/.ccache_${{ github.event.inputs.FILE }}"
          echo "set: $HOME/.ccache_${{ github.event.inputs.FILE }}"

      - name: Configure Git
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Configure APTC
        run: |
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
          echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
          echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          sudo chown -R $USER:$USER "$APT_CACHE_DIR"

      - name: Set APT Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/Build SukiSU Ultra OnePlus.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install Dependencies
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR/lists/partial"
          sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            python3 git curl ccache libelf-dev \
            build-essential flex bison libssl-dev \
            libncurses-dev liblz4-tool zlib1g-dev \
            libxml2-utils rsync unzip

      - name: Restore Ccache
        uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.ref_name }}-${{ github.event.inputs.FILE }}-${{ env.BUILD_METHOD }}-${{ github.event.inputs.FAST_BUILD == 'true' && 'alpha' || 'beta' }}-15

      - name: Initialize Ccache
        run: |
          INIT_FLAG="${{ env.CCACHE_DIR }}/.ccache_initialized"
          if command -v ccache >/dev/null 2>&1; then
            if [ ! -f "$INIT_FLAG" ]; then
              echo "ÂàùÂßãÂåñ ccache (${{ env.CCACHE_DIR }})..."
              mkdir -p "${{ env.CCACHE_DIR }}"
              ccache -M ${{ env.CCACHE_MAXSIZE }}
              touch "$INIT_FLAG"
              echo "‚úÖ ccache ÂàùÂßãÂåñÂÆåÊàê"
            else
              echo "‚úÖ ccache Â∑≤ÂàùÂßãÂåñÔºåË∑≥Ëøá"
            fi
          else
            echo "‚ùå Êú™ÂÆâË£Ö ccacheÔºåË∑≥Ëøá"
          fi
          ccache -s

      - name: Install Repo Tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize Repo and Sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          mkdir -p .repo/manifests
          FILE="${{ github.event.inputs.FILE }}"
          cp "$GITHUB_WORKSPACE/.repo/manifests_fallback/${FILE}.xml" ".repo/manifests/${FILE}.xml"
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/${{env.CPU}} -m "${FILE}.xml" --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
          repo sync -c -j$(nproc) --no-clone-bundle --no-tags --force-sync
          if [ -e kernel_platform/common/BUILD.bazel ]; then
            sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' kernel_platform/common/BUILD.bazel
          fi
          if [ -e kernel_platform/msm-kernel/BUILD.bazel ]; then
            sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' kernel_platform/msm-kernel/BUILD.bazel
          fi
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: Upload to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msm_source
          path: kernel_workspace/kernel_platform/msm-kernel/*
          retention-days: 1
